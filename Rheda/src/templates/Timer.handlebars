{{!*  Rheda: visualizer and control panel
*  Copyright (C) 2016  o.klimenko aka ctizen
*
*  This program is free software: you can redistribute it and/or modify
*  it under the terms of the GNU General Public License as published by
*  the Free Software Foundation, either version 3 of the License, or
*  (at your option) any later version.
*
*  This program is distributed in the hope that it will be useful,
*  but WITHOUT ANY WARRANTY; without even the implied warranty of
*  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
*  GNU General Public License for more details.
*
*  You should have received a copy of the GNU General Public License
*  along with this program.  If not, see <http://www.gnu.org/licenses/>.
*}}
<style type="text/css">
    span.success {
        color: #393;
    }

    span.fail {
        color: #c44;
    }

    .navbar-inner {
        display: none;
    }

    .timer, .timer > * {
        font-size: 300px;
        font-family: monospace;
        font-weight: bold;
        margin-top: 200px;
        text-align: center;
        line-height: 1;
    }

    .timer.mini, .timer.mini > * {
        font-size: 100px;
        margin-top: 0;
    }
</style>

<script type="text/javascript">
    !function () {
        var soundBeforeEnd = new Audio("/assets/5min.wav"); // buffers automatically when created
        var soundOnEnd = new Audio("/assets/endgame.wav"); // buffers automatically when created
        var initialTime = '{{initialTime}}'.split(':');
        var minutes = parseInt(initialTime[0]);
        var seconds = parseInt(initialTime[1]) / 10;
        var redZone = '{{redZone}}' === '1';
        var yellowZone = '{{yellowZone}}' === '1';
        var waiting = '{{waiting}}';
        var timer;

        $(function () {
            runTimer();
            if (minutes <= 0 || (!minutes && !seconds)) {
                $('.timer').addClass('mini');
                $('.seating').show();
            }
            timer = window.setInterval(runTimer, 10000);
        });

        function formatTime(minutes, seconds) {
            var addedZero = '';
            if (seconds < 1) {
                addedZero = '0';
            }
            return minutes + ':' + addedZero + seconds * 10;
        }

        function checkRedZone(minutes) {
            if (redZone && minutes < {{redZoneLength}}) {
                $('#time').css({color: '#f55'});
                if (soundBeforeEnd) {
                    soundBeforeEnd.play();
                    soundBeforeEnd = false; // play the sound only once
                }
            }
        }

        function checkYellowZone(minutes) {
            if (yellowZone && minutes < {{yellowZoneLength}}) {
                $('#time').css({backgroundColor: '#ff5'});
                if (soundBeforeEnd) {
                    soundBeforeEnd.play();
                    soundBeforeEnd = false; // play the sound only once
                }
            }
        }

        function checkSeating(minutes) {
            if (minutes >= ({{gameDurationWithoutSeating}}) ) {
                $('.timer').addClass('mini');
                $('.seating').show();
            } else {
                $('.timer').removeClass('mini');
                $('.seating').hide();
            }
        }

        function stopTimer() {
            window.clearInterval(timer);
            $('#time').html('{{_t 'No time left!'}}');
            $('.timer').addClass('mini');
            $('.seating').show();

            if (soundOnEnd) {
                soundOnEnd.play();
                soundOnEnd = false; // play the sound only once
            }
        }

        function runTimer() {
            if (waiting) {
                return;
            }

            if (seconds === 0) {
                minutes--;
                seconds = 6; // just in case
            }

            seconds--;
            checkRedZone(minutes);
            checkYellowZone(minutes);

            if (minutes < 0) {
                stopTimer();
            } else {
                $('#time').html(formatTime(minutes, seconds));
            }

            checkSeating(minutes);
        }
    }();
</script>

{{#isAggregated}}
{{#error}}
<div class="alert alert-danger">{{error}}</div>
{{/error}}
{{/isAggregated}}
{{^isAggregated}}
    {{^waiting}}
        <div class="timer">
            <span id="time">{{initialTime}}</span>
        </div>
    {{/waiting}}
    <div class="seating">
        <hr/>
        <h3>{{_t 'SEATING'}}</h3>
        <table class="table table-bordered">
            <tr>
                <th>{{_t 'Table #'}}</th>
                <th>{{_t 'EAST'}}</th>
                <th>{{_t 'SOUTH'}}</th>
                <th>{{_t 'WEST'}}</th>
                <th>{{_t 'NORTH'}}</th>
            </tr>
            {{#seating}}
                <tr>
                    <td>{{index}}</td>
                    {{#players}}
                        <td>{{display_name}} <span class="badge badge-{{zone}}">{{rating}}</span></td>
                    {{/players}}
                </tr>
            {{/seating}}
        </table>
    </div>
{{/isAggregated}}
