<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: proto/atoms.proto

namespace Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>common.ComplexUma</code>
 */
class ComplexUma extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>.common.Uma neg1 = 1;</code>
     */
    protected $neg1 = null;
    /**
     * Generated from protobuf field <code>.common.Uma neg3 = 2;</code>
     */
    protected $neg3 = null;
    /**
     * Generated from protobuf field <code>.common.Uma otherwise = 3;</code>
     */
    protected $otherwise = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \Common\Uma $neg1
     *     @type \Common\Uma $neg3
     *     @type \Common\Uma $otherwise
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Atoms::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.common.Uma neg1 = 1;</code>
     * @return \Common\Uma|null
     */
    public function getNeg1()
    {
        return $this->neg1;
    }

    public function hasNeg1()
    {
        return isset($this->neg1);
    }

    public function clearNeg1()
    {
        unset($this->neg1);
    }

    /**
     * Generated from protobuf field <code>.common.Uma neg1 = 1;</code>
     * @param \Common\Uma $var
     * @return $this
     */
    public function setNeg1($var)
    {
        GPBUtil::checkMessage($var, \Common\Uma::class);
        $this->neg1 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common.Uma neg3 = 2;</code>
     * @return \Common\Uma|null
     */
    public function getNeg3()
    {
        return $this->neg3;
    }

    public function hasNeg3()
    {
        return isset($this->neg3);
    }

    public function clearNeg3()
    {
        unset($this->neg3);
    }

    /**
     * Generated from protobuf field <code>.common.Uma neg3 = 2;</code>
     * @param \Common\Uma $var
     * @return $this
     */
    public function setNeg3($var)
    {
        GPBUtil::checkMessage($var, \Common\Uma::class);
        $this->neg3 = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.common.Uma otherwise = 3;</code>
     * @return \Common\Uma|null
     */
    public function getOtherwise()
    {
        return $this->otherwise;
    }

    public function hasOtherwise()
    {
        return isset($this->otherwise);
    }

    public function clearOtherwise()
    {
        unset($this->otherwise);
    }

    /**
     * Generated from protobuf field <code>.common.Uma otherwise = 3;</code>
     * @param \Common\Uma $var
     * @return $this
     */
    public function setOtherwise($var)
    {
        GPBUtil::checkMessage($var, \Common\Uma::class);
        $this->otherwise = $var;

        return $this;
    }

}

