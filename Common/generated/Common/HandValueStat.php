<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: proto/atoms.proto

namespace Common;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>common.HandValueStat</code>
 */
class HandValueStat extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>int32 han_count = 1;</code>
     */
    protected $han_count = 0;
    /**
     * count of hands with this value
     *
     * Generated from protobuf field <code>int32 count = 2;</code>
     */
    protected $count = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $han_count
     *     @type int $count
     *           count of hands with this value
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Proto\Atoms::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>int32 han_count = 1;</code>
     * @return int
     */
    public function getHanCount()
    {
        return $this->han_count;
    }

    /**
     * Generated from protobuf field <code>int32 han_count = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setHanCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->han_count = $var;

        return $this;
    }

    /**
     * count of hands with this value
     *
     * Generated from protobuf field <code>int32 count = 2;</code>
     * @return int
     */
    public function getCount()
    {
        return $this->count;
    }

    /**
     * count of hands with this value
     *
     * Generated from protobuf field <code>int32 count = 2;</code>
     * @param int $var
     * @return $this
     */
    public function setCount($var)
    {
        GPBUtil::checkInt32($var);
        $this->count = $var;

        return $this;
    }

}

