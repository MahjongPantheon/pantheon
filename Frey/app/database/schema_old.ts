/**
 * This file was generated by kysely-codegen.
 * Please do not edit it manually.
 */

import type { ColumnType } from "kysely";

export type Generated<T> = T extends ColumnType<infer S, infer I, infer U>
  ? ColumnType<S, I | undefined, U>
  : ColumnType<T, T | undefined, T>;

export type Int8 = ColumnType<string, bigint | number | string, bigint | number | string>;

export type Timestamp = ColumnType<Date, Date | string, Date | string>;

export interface Group {
  description: string;
  id: Generated<number>;
  label_color: string | null;
  title: string;
}

export interface GroupAccess {
  /**
   * ACL item recognizable name to differentiate this one from others
   */
  acl_name: string;
  /**
   * Data type stored in this cell. Can be boolean, enum or integer
   */
  acl_type: string;
  /**
   * ACL value. Has limit of 255 bytes long for performance reasons
   */
  acl_value: string;
  allowed_values: string;
  event_id: number | null;
  group_id: number;
  id: Generated<number>;
}

export interface MajsoulPlatformAccounts {
  account_id: number;
  friend_id: number;
  id: Generated<Int8>;
  nickname: string;
  person_id: number;
}

export interface Person {
  auth_hash: string;
  /**
   * This field stores temporary secure token if user requests changing his password
   */
  auth_reset_token: string | null;
  /**
   * App-level salt to make client-side permanent token
   */
  auth_salt: string;
  city: string | null;
  country: Generated<string>;
  disabled: number;
  /**
   * PERSONAL DATA
   */
  email: string;
  has_avatar: Generated<number>;
  id: Generated<number>;
  is_superadmin: Generated<number>;
  last_update: Timestamp | null;
  notifications: Generated<string>;
  /**
   * PERSONAL DATA
   */
  phone: string | null;
  telegram_id: Generated<string>;
  tenhou_id: string | null;
  title: string;
}

export interface PersonAccess {
  /**
   * ACL item recognizable name to differentiate this one from others
   */
  acl_name: string;
  /**
   * Data type stored in this cell. Can be boolean, enum or integer
   */
  acl_type: string;
  /**
   * ACL value. Has limit of 255 bytes long for performance reasons
   */
  acl_value: string;
  allowed_values: string;
  event_id: number | null;
  id: Generated<number>;
  person_id: number;
}

export interface PersonGroup {
  group_id: number;
  id: Generated<number>;
  order: number;
  person_id: number;
}

export interface Phinxlog {
  breakpoint: Generated<boolean>;
  end_time: Timestamp | null;
  migration_name: string | null;
  start_time: Timestamp | null;
  version: Int8;
}

export interface Registrant {
  approval_code: string;
  auth_hash: string;
  /**
   * App-level salt to make client-side permanent token
   */
  auth_salt: string;
  email: string;
  id: Generated<number>;
  title: Generated<string>;
}

export interface DB {
  group: Group;
  group_access: GroupAccess;
  majsoul_platform_accounts: MajsoulPlatformAccounts;
  person: Person;
  person_access: PersonAccess;
  person_group: PersonGroup;
  phinxlog: Phinxlog;
  registrant: Registrant;
}
